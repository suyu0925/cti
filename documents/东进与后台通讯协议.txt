外呼WEB与东进服务端通讯协议

========================================================
= 修改时间：2015-04-02_V0.2
= 修改人员：苏宇
========================================================

/*************************************/
格式定义
/*************************************/
命令的书写格式
    全部小写
    单词连接以下划线分隔

通讯发送方与接收方
    <- 代表东进到后台
    >- 代表后台到东进

error_code
    0为成功，无异常
    正值为可预计的轻微异常
    负值为严重异常

/*************************************/
座席状态
/*************************************/

摘机 <-
    notify user_id off-hook 

    例子：
        内线ID号为1的座席摘机
        notify 1 off-hook

挂机 <-
    notify user_id on-hook

    例子：
        内线ID号为1的座席挂机
        notify 1 on-hook

振铃 <-
    notify user_id ring

    例子：
        内线ID号为4的座席正在振铃
        notify 4 ring

/*************************************/
通话
/*************************************/
发起通话 >-
    call call_handle phone_number case_id

    例子：
        通话句柄为231, 被叫号为801，案例号为BS1230123
        call 231 801 BS1230123

    说明：
        case_id案例号是用来做动态录播的，比如“尊敬的何先生，您好。您在平安银行所贷的13000元已发生逾期，
    逾期金额为2300元，请尽快缴纳。”此种情况为语音播报催收IVR，无须转到座席。
        现在可以不对case_id做处理，留个坑。

        call_handle通话句柄是很重要的一个值，在录音时，可根据时间和call_handle来命名文件，以便查找。    

开始拨号 <-
    call call_handle start

    例子：
        通话句柄为231的通话开始拨号
        call 231 start

拨号已在振铃 <-
    call call_handle ring


拨号已被接起 <-
    call call_handle connect


通话结束 <-
    call call_handle end error_code

    error_code:
        0：无异常（座席作为最后一人挂断）
        1：客户拒接
        2：客户忙线
        3：无人接听
        4：号码为空号
        5：座席还没接起，客户在听录音就挂断了
        -1：客户还没挂，座席先挂了

离开通话 <-
    notify user_id leave call_handle

    例子：
        内线ID号为4的座席离开handle为181的通话
        notify 4 leave 181


/*************************************/
会议
/*************************************/

加入通话请求 >-
    join join_handle call_handle user_id

    例子：
        内线ID号为4的座席请求加入ID为181的通话，会议句柄为231
        join 231 181 4

加入通话回应 <-
    join join_handle error_code

    error_code定义：
        0：成功
        1：对方已挂机
        -1: 座席无人接听
        -2：座席已摘机

    例子：
        会议句柄为231的请求成功
        join 231 0
    例子：
        会议句柄为231的请求失败，原因是对方已挂机
        join 231 1
    例子：
        会议句柄为231的请求失败，原因是座席振铃超时，无人接听。默认5秒钟超时，从振铃开始计算。
        join 231 -1
    例子：
        会议句柄为231的请求失败，原因是座席不知道怎的把电话摘起，算是严重异常
        join 231 -2

/*************************************/
案例讲解
/*************************************/

案例1、
    拨打110，没打通，对方无人接听。

-> call 229 110 BS1230121
<- call 229 start
<- call 229 end 3

案例2、
    拨打112，打通了，交给座席4，交谈起争执，座席4挂断，客户挂断。

-> call 230 112 BS1230122
<- call 230 start
<- call 230 ring
<- call 230 connect
-> join 486 4 230
<- notify 4 ring
<- notify 4 off-hook
<- join 486 0
<- notify 4 on-hook
<- call 230 end -1

案例3、
    拨打120，打通后交给座席4，座席4没接，然后转给座席3，座席3请求组长10协助，
组长10挂断，客户挂断，座席3挂断。

-> call 231 120 BS1230123 // 发起句柄为231的拨号请求
<- call 231 start // 开始拨号
<- call 231 ring // 客户振铃
<- call 231 connect // 客户接起，正在听录音

-> join 487 4 231 // 转给座席4
<- notify 4 ring // 座席4振铃
<- join 487 -1 // 但无人接听

-> join 488 3 231 // 于是转给座席3
<- notify 3 ring // 座席3振铃
<- notify 3 off-hook // 座席3摘机
<- join 488 0 // 接话完成

-> join 489 10 231 // 请求组长10协助
<- notify 10 ring // 组长10振铃
<- notify 10 off-hook // 组长摘机
<- join 489 0 // 组长加入通话

<- notify 10 on-hook // 组长10挂断
<- notify 10 level 231 // 组长10已离开句柄为231的通话
<- notify 3 on-hook // 座席3挂断
<- notify 3 level 231 // 座席3已离开句柄为231的通话
<- call 231 end 0 // 句柄为231的通话结束



========================================================
=
=
========================================================
修改时间：2015-03-30_V0.1
修改人员：杨剑

东进服务端收到外呼WEB任务编号(包含主叫ID编号、被叫号列表)，开始外呼。
呼叫成功，传回被叫号码，结束通讯。

1、接收 (任务编号901: 对内线ID号为1建立外呼任务，被叫号801~803) 
   Call 901 1 801,802,803 

2、回应 (呼叫任务已收到)
   Call 901 Start (开始呼叫)
   Call 901 Busy  (忙线)      -> 结束通讯

3、回应 (呼叫中...每100ms发送1次)
   Call 901 Calling (正在呼叫) -> 网页超过200ms未收到回应，视为通讯超时，结束通讯

4、回应 (呼叫成功,被叫号802)
   Call 901 802 (呼叫成功) -> 结束通讯

5、回应 (呼叫失败,失败原因)
   Call 901 Error xxx (呼叫失败.失败原因) -> 结束通讯

东进服务端将呼叫细节保存在数据库中，关联关键字为任务编号。
